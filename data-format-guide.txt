Data Format guidelines:
This text document provides information on how the data should be formatted for usage. Please go through the following guidelines before 
constructing the dataset!

* Info on Dataset Folder structure is provided in data-folder-structure.md file! 

Guidelines: 
- Text Data: As this will be used in a large language model, the primary data should be text. The optimal context length has to decided.
- Data Cleaning: Data cleaning is essential before any use, as it may contain advertisements or irrelevant information. 
                The data should be cleaned, concise, and limited to blog articles exclusively.
- Length of Text for each instance: The length of each blog or instance may vary, with some containing less content than others.
                We must determine the most effective approach to handle these differences and ensure optimal performance.
- Organized Data: Given the multiple categories and subcategories within the dataset, it's necessary to maintain separate datasets for each category. 
                This approach ensures that appropriate metadata can be used for each specific category.
- Optimize for RAG: The dataset should include metadata to facilitate optimization and re-ranking after retrieval.
                This approach will guarantee that the most relevant and useful information is retrieved, aligning with the userâ€™s query.
- Pipeline: The dataset should be structured to allow the data pipeline to seamlessly ingest new data in the same format as the existing knowledge base. 
                This approach will ensure our chatbot remains updated with the latest information.
- more ..


* (o) indicate that the key might be optional for varying category

# Data Format Details:
The dataset need to be formatted as json files containing a unique id for each instance, text(content) and relevant metadata 
The data should include the following keys:
- "unique_id": A unique id for the instance
- "text": Main content of the blog
- "pet_type": Type of pet, eg Dog
- "pet_breed" (o): Breed type of the pet 
- "category" (o): Type of content, eg Diet, exercise, etc
- "author": Name of the veteran/author of the blog*-
- "source": link of the article*-
- "keywords": Extracted important keywords from the article
- "pet_age_group" (o): Age group of the pet 


StepWise process: 

- user inputs a query
- Define vector similarity matching methods
- vector similarity matching is executed
- metadata extracted 
- Defining re-ranking methods
- implement re-ranking methods
- return to LLM

